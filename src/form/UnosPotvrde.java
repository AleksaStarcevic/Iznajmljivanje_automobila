/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import controller.Kontroler;
import domen.Automobil;
import domen.Korisnik;
import domen.PotvrdaOIznajmljivanju;
import domen.Vozac;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author aleks
 */
public class UnosPotvrde extends javax.swing.JDialog {

    /**
     * Creates new form UnosPotvrde
     */
    public UnosPotvrde(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        try {
            prepareView();
        } catch (SQLException ex) {
            Logger.getLogger(UnosPotvrde.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        cmbRegistracioniBroj = new javax.swing.JComboBox();
        cmbVozac = new javax.swing.JComboBox();
        txtCena = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();
        lblErrorID = new javax.swing.JLabel();
        lblErrorDatumOd = new javax.swing.JLabel();
        lblErrorDatumDo = new javax.swing.JLabel();
        lblErrorCena = new javax.swing.JLabel();
        datumOD = new datechooser.beans.DateChooserCombo();
        datumDO = new datechooser.beans.DateChooserCombo();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("ID:");

        jLabel2.setText("Registracioni broj:");

        jLabel3.setText("Vozac:");

        jLabel4.setText("Datum od:");

        jLabel5.setText("Datum do:");

        jLabel6.setText("Cena:");

        cmbRegistracioniBroj.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbVozac.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        lblErrorID.setForeground(new java.awt.Color(255, 51, 51));
        lblErrorID.setText("jLabel7");

        lblErrorDatumOd.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorDatumOd.setText("jLabel8");

        lblErrorDatumDo.setForeground(new java.awt.Color(255, 51, 51));
        lblErrorDatumDo.setText("jLabel9");

        lblErrorCena.setForeground(new java.awt.Color(255, 0, 0));
        lblErrorCena.setText("jLabel10");

        datumOD.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);
        datumOD.setLocale(new java.util.Locale("sr", "", ""));

        datumDO.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);
        datumDO.setLocale(new java.util.Locale("sr", "", ""));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel1)
                            .addComponent(lblErrorID)
                            .addComponent(lblErrorDatumOd)
                            .addComponent(lblErrorCena)
                            .addComponent(lblErrorDatumDo))
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbRegistracioniBroj, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbVozac, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCena)
                            .addComponent(datumOD, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                            .addComponent(datumDO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSacuvaj)
                        .addGap(47, 47, 47)))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorID, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbRegistracioniBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbVozac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblErrorDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(datumOD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(datumDO, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(lblErrorCena)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(btnSacuvaj)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        
        if(validacija()){
            return;
        }
        

        int id = Integer.parseInt(txtID.getText());
        Automobil auto = (Automobil) cmbRegistracioniBroj.getSelectedItem();
        Vozac vozac = (Vozac) cmbVozac.getSelectedItem();
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        Date datumOd = datumOD.getSelectedDate().getTime();
        Date datumDo = datumDO.getSelectedDate().getTime();
        double cena = Double.parseDouble(txtCena.getText());

        try {
            Korisnik korisnik = Kontroler.getInstanca().getUlogovaniKorisnik();
            PotvrdaOIznajmljivanju potvrda = new PotvrdaOIznajmljivanju(id, datumOd, datumDo, cena, auto, vozac, korisnik);
            System.out.println(potvrda);
            Kontroler.getInstanca().dodaj(potvrda);
            JOptionPane.showMessageDialog(this, "Potvrda je uspesno sacuvana!");
            System.out.println(Kontroler.getInstanca().getPotvrde());

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Neuspesan unos potvrde!\n" + e.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UnosPotvrde.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UnosPotvrde.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UnosPotvrde.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UnosPotvrde.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UnosPotvrde dialog = new UnosPotvrde(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbRegistracioniBroj;
    private javax.swing.JComboBox cmbVozac;
    private datechooser.beans.DateChooserCombo datumDO;
    private datechooser.beans.DateChooserCombo datumOD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblErrorCena;
    private javax.swing.JLabel lblErrorDatumDo;
    private javax.swing.JLabel lblErrorDatumOd;
    private javax.swing.JLabel lblErrorID;
    private javax.swing.JTextField txtCena;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables

    private void prepareView() throws SQLException {
       lblErrorID.setVisible(false);
        lblErrorCena.setVisible(false);
        lblErrorDatumDo.setVisible(false);
        lblErrorDatumOd.setVisible(false);
        popuniCmbAutomobili();
        popuniCmbVozaci();
    }

    private void popuniCmbAutomobili() throws SQLException {
        cmbRegistracioniBroj.removeAllItems();
        List<Automobil> autombili = Kontroler.getInstanca().getStorageAutomobili();
        for (Automobil automobil : autombili) {
            cmbRegistracioniBroj.addItem(automobil);

        }
    }

    private void popuniCmbVozaci() throws SQLException {
        cmbVozac.removeAllItems();
        List<Vozac> vozaci = Kontroler.getInstanca().getStorageVozac();
        for (Vozac vozac : vozaci) {
            cmbVozac.addItem(vozac);

        }
    }

//    private void validacija() throws Exception {
//        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
//        String errorMessage = "";
//        if (txtID.getText().isEmpty()) {
//            errorMessage += "ID ne sme biti prazan!\n";
//        }
//        if (txtDatumDo.getText().isEmpty() || txtDatumOd.getText().isEmpty()) {
//            errorMessage += "Datum ne sme biti prazan!\n";
//        }
//        double cena = Double.parseDouble(txtCena.getText());
//        if (cena < 0 || txtCena.getText().isEmpty()) {
//            errorMessage += "Cena ne sme biti prazna i mora biti >0!\n";
//        }
//        
//        try {
//            Date datumOD = sdf.parse(txtDatumOd.getText());
//            Date datumDO = sdf.parse(txtDatumDo.getText());
//
//            if (datumOD.before(new Date()) || datumDO.before(new Date())) {
//                errorMessage += "Datum mora biti tekuci!\n";
//            }
//
//        } catch (Exception e) {
//            errorMessage += "Datum mora biti u formatu dd.MM.yyyy !\n";
//        }
//
//        if (!errorMessage.isEmpty()) {
//            throw new Exception(errorMessage);
//        }

//    }
    
  public boolean validacija(){
       lblErrorID.setVisible(false);
        lblErrorCena.setVisible(false);
        lblErrorDatumDo.setVisible(false);
        lblErrorDatumOd.setVisible(false);
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
      
      boolean prazno = false;
        if (txtID.getText().isEmpty()) {
            lblErrorID.setText("ID je obavezan!");
            lblErrorID.setVisible(true);
            prazno = true;
        }
        
         if (txtCena.getText().isEmpty()) {
            lblErrorCena.setText("Cena je obavezano polje!");
            lblErrorCena.setVisible(true);
            prazno = true;
         }else if(Double.parseDouble(txtCena.getText()) <= 0){
               lblErrorCena.setText("Cena ne sme biti manja od 0!");
                lblErrorCena.setVisible(true);
            prazno = true;
         }
         
        
         
         if(datumOD.getSelectedDate().getTime().before(new Date())){
             lblErrorDatumOd.setText("Datum mora biti tekuci!");
             lblErrorDatumOd.setVisible(true);
              prazno = true;
         }
         
         if(datumDO.getSelectedDate().getTime().before(new Date())){
             lblErrorDatumDo.setText("Datum mora biti tekuci!");
             lblErrorDatumDo.setVisible(true);
              prazno = true;
         }
         
        
         
         
         
         return prazno;
    }

}
